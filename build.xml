<!--
Copyright 2010 by Dan Fabulich.

Dan Fabulich licenses this file to you under the
ChoiceScript License, Version 1.0 (the "License"); you may
not use this file except in compliance with the License. 
You may obtain a copy of the License at

 http://www.choiceofgames.com/LICENSE-1.0.txt

See the License for the specific language governing
permissions and limitations under the License.

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
either express or implied.
-->
<project default="quicktest">
  <target name="burn-revision-numbers" unless="skipVersion">
    <condition property="git" value="gitx.cmd">
        <os family="windows" />
    </condition>
    <property name="git" value="git" />
    <exec executable="${git}" outputproperty="revision" failonerror="true">
      <arg value="describe"/>
      <arg value="--long"/>
    </exec>
    <echo file="web/version.js">window.version="${revision}"</echo>
  </target>
  
  <target name="check-node" unless="skipNode">
    <exec taskName="node" executable="node" resultproperty="exitCode" failIfExecutionFails="false">
      <arg value="--version" />
    </exec>
    <condition property="hasNode">
      <equals arg1="${exitCode}" arg2="0" />
    </condition>
  </target>

  <target name="node" depends="check-node" if="hasNode">
    <presetdef name="rhino">
      <exec taskName="node" failonerror="true" executable="node" />
    </presetdef>
    <property name="gen.dir" location="${basedir}/web/mygame/scenes" />
    <property name="test.dir" location="${basedir}/tests" />
  </target>

  <target name="rhino" depends="node" unless="hasNode">
    <condition property="rhinoClass" value="org.mozilla.javascript.tools.debugger.Main">
      <isset property="debug" />
    </condition>
    <property name="rhinoClass" value="org.mozilla.javascript.tools.shell.Main"/>
    <presetdef name="rhino">
      <java failonerror="true" classpath="js.jar" classname="${rhinoClass}" fork="true">
        <arg line="-w -opt -1 -debug"/>
      </java>
    </presetdef>
    <property name="gen.dir" location="${basedir}/web/mygame/scenes" />
    <property name="test.dir" location="${basedir}/tests" />
  </target>
  
  <target name="unittest-core" depends="rhino">
    <rhino>
      <arg file="${test.dir}/suite.js" />
      <arg file="${test.dir}/qunit.js" />
      <arg file="${basedir}/web/scene.js" />
      <arg file="${basedir}/web/util.js" />
      <arg file="${basedir}/headless.js" />
      <arg file="${test.dir}/scenetest.js" />
    </rhino>

  </target>
  
  <target name="unittest-util" depends="rhino">
    <rhino>
      <arg file="${test.dir}/suite.js" />
      <arg file="${test.dir}/qunit.js" />
      <arg file="${basedir}/web/scene.js" />
      <arg file="${basedir}/web/util.js" />
      <arg file="${basedir}/headless.js" />
      <arg file="${test.dir}/utiltest.js" />
    </rhino>

  </target>

  <target name="unittest-autotest" depends="rhino">
    <rhino>
      <arg file="${test.dir}/suite.js" />
      <arg file="${test.dir}/qunit.js" />
      <arg file="${basedir}/web/scene.js" />
      <arg file="${basedir}/web/util.js" />
      <arg file="${basedir}/headless.js" />
      <arg file="${basedir}/editor/embeddable-autotester.js" />
      <arg file="${test.dir}/autotesttest.js" />
    </rhino>
  </target>
  
  <target name="unittest-xmltranslator" depends="rhino">
    <rhino>
      <arg file="${test.dir}/suite.js" />
      <arg file="${test.dir}/qunit.js" />
      <arg file="${basedir}/web/scene.js" />
      <arg file="${basedir}/web/util.js" />
      <arg file="${basedir}/headless.js" />
      <arg file="${test.dir}/xmltranslatortestoverride.js" />
      <arg file="${basedir}/xmltranslator.js" />
      <arg file="${test.dir}/xmltranslatortest.js" />
    </rhino>
  </target>
  
  <target name="unittest" depends="unittest-core, unittest-util, unittest-autotest, unittest-xmltranslator" />

  <target name="randomtest" depends="rhino">
    <property name="num" value="10000" />
    <property name="game" value="mygame" />
    <property name="output" value="randomtest-output.txt" />
    <echo>Executing randomtest, writing to ${output}</echo>
    <rhino output="${output}">
      <arg value="randomtest.js" />
      <arg value="${num}" />
      <arg value="${game}" />
    </rhino>
  </target>
  
  <target name="autotest" depends="quicktest" />
  
  <target name="quicktest" depends="rhino">
    <property name="vig" value="" />
    <rhino>
      <arg value="autotest.js"/>
      <arg value="${vig}" />
    </rhino>
  </target>
  
  <target name="generator" depends="rhino">
    <condition property="scriptSuffix" value="Node">
      <isset property="hasNode" />
    </condition>
    <property name="scriptSuffix" value="" />
    <rhino>
      <arg file="generator${scriptSuffix}.js"/>
      <arg value="${gen.dir}" />
    </rhino>
  </target>
  
  <target name="xmltranslator" depends="rhino">
    <property name="vig" value="" />
    <rhino>
      <arg file="xmltranslator.js"/>
      <arg value="${gen.dir}" />
      <arg value="${vig}" />
    </rhino>
  </target>
  
  <target name="cleangen">
    <property name="gen.dir" location="${basedir}" />
    <delete>
      <fileset dir="web/mygame/scenes">
        <include name="*.js" />
      </fileset>
    </delete>
  </target>
</project>